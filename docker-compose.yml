x-service: &service
  restart: unless-stopped
x-env: &env
  PUID: 1000
  PGID: 1000
  TZ: America/Halifax
version: "2.1"
services:
  caddy:
    <<: *service
    image: caddy
    environment:
      <<: *env
      XDG_DATA_HOME: /etc
      HIDDEN_FILES:
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./config/caddy:/etc/caddy
      - ./data:/data
  portainer:
    <<: *service
    image: portainer/portainer-ce
    environment:
      <<: *env
    ports:
      - 8000:8000
      - 9000:9000
    volumes:
      - ./config/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
  calibre:
    <<: *service
    image: ghcr.io/linuxserver/calibre-web
    environment:
      <<: *env
      DOCKER_MODS: linuxserver/calibre-web:calibre
    ports:
      - 8083:8083
    volumes:
      - ./config/calibre:/config
      - ./data/books:/books
  wireguard:
    <<: *service
    image: ghcr.io/linuxserver/wireguard
    environment:
      <<: *env
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    volumes:
      # Requires ./config/wireguard/wg0.conf.
      # If `ip -6 address add <...> dev wg0` outputs: "RTNETLINK answers: Permission denied":
      # - Remove v6 address on `Address` line
      # - Remove ::/0 on `AllowedIPs` line
      - ./config/wireguard:/config
      - /lib/modules:/lib/modules
  qbittorrent:
    <<: *service
    # TODO: Why does qBittorrent 4.4.1 not work? (DHT 0 nodes)
    image: ghcr.io/linuxserver/qbittorrent:4.4.0
    network_mode: service:wireguard
    environment:
      <<: *env
      # This port needs to be forwarded by the VPN provider.
      WEBUI_PORT: 55082
    volumes:
      - ./config/qbittorrent:/config
      - ./data/torrents:/data/torrents
  radarr:
    <<: *service
    image: ghcr.io/linuxserver/radarr
    environment:
      <<: *env
    ports:
      - 7878:7878
    volumes:
      - ./config/radarr:/config
      - ./data:/data
  sonarr:
    <<: *service
    image: ghcr.io/linuxserver/sonarr
    environment:
      <<: *env
    ports:
      - 8989:8989
    volumes:
      - ./config/sonarr:/config
      - ./data:/data
  prowlarr:
    <<: *service
    image: ghcr.io/linuxserver/prowlarr:develop
    environment:
      <<: *env
    ports:
      - 9696:9696
    volumes:
      - ./config/prowlarr:/config
  plex:
    <<: *service
    image: ghcr.io/linuxserver/plex
    environment:
      <<: *env
      PLEX_CLAIM:
    ports:
      - 32400:32400
      - 1900:1900/udp
      # This port is used by Avahi, so including it here prevents you from running it on the host.
      # Everything still seems to work fine without it.
      # - 5353:5353/udp
      - 8324:8324
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      - 32469:32469
    volumes:
      - ./config/plex:/config
      - ./data:/data
      - ./tv:/tv
  tautulli:
    <<: *service
    image: ghcr.io/linuxserver/tautulli
    environment:
      <<: *env
    volumes:
      - ./config/tautulli:/config
    ports:
      - 8181:8181
  plex-qbt:
    <<: *service
    build: services/plex_qbt
    environment:
      <<: *env
      PLEX_TOKEN:
      QBT_PASSWORD:
